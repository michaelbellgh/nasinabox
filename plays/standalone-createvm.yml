---

 - name: Build NAS VM
   gather_facts: false
   hosts: localhost
   connection: local

   tasks:
    - name: Load VM variables
      include_vars:
        file: "../data/vars/vm.yml"
        name: vm_vars


    - name: Create working DIR
      file:
        path: /tmp/workingdir/iso
        state: directory

    - name: Install passlib
      pip:
        name:
         - passlib

    - name: Install mkisofs, xorriso
      apt:
        name:
         - xorriso
         - mkisofs
        state: present

    - name: Bcrypt password
      set_fact:
        passhash: "{{ vm_vars.vminfo.guest_pass | password_hash('bcrypt') }}"

    - name: Mount ISO in loopfs
      mount:
        src: "{{ vm_vars.paths.src_iso }}"
        path: /tmp/workingdir/iso
        opts: loop
        state: mounted 
        fstype: iso9660
    

    - name: Copy ISO contents
      copy: 
        src: /tmp/workingdir/iso/
        dest: /tmp/workingdir/isocontents/

    - name: Unmount ISO
      mount:
        path: /tmp/workingdir/iso
        state: unmounted
    
    - name: Edit ISOLINUX
      replace:
        dest: "/tmp/workingdir/isocontents/isolinux/txt.cfg"
        regexp: 'append   initrd=/casper/initrd quiet  ---'
        replace: 'append   initrd=/casper/initrd quiet --- autoinstall ds=nocloud;s=/cdrom/autoinstall/'

    - name: Create directory to store user-data and meta-data
      file:
        path: "/tmp/workingdir/isocontents/autoinstall"
        state: directory

    - name: Template autoinstall
      set_fact:
        autoinstall_config: "{{ lookup('template', '../data/templates/autoinstall.j2') }}"

    - name: Make autoinstall config
      copy:
        dest: /tmp/workingdir/isocontents/autoinstall/user-data
        content: "{{ autoinstall_config }}"

    - name: Create metadata file
      file:
        path: /tmp/workingdir/isocontents/autoinstall/meta-data
        state: touch

    - name: Create custom Ubuntu ISO
      command: "xorrisofs -relaxed-filenames -J -R -o /tmp/workingdir/ubuntu64.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table /tmp/workingdir/isocontents/"
      args:
        chdir: "/tmp/workingdir/isocontents/"

